/*
 * frmMMFull.java
 *
 * Created on 09 Kasým 2007 Cuma, 16:08
 */

package askan;

import askan.configuration.*;
import askan.systems.*;
import askan.steelyard.*;
import java.awt.event.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author  Kerem
 */
public class frmMMFull extends javax.swing.JFrame {
    
    private ArrayList
            vendors,
            materials,
            drivers;
    
    private PurchProcess purchProcess;
    
    private boolean
            itemSaved,
            disableVendorAction,
            disableSenderAction,
            disableMaterialAction,
            manualMode;
    
    /** Creates new form frmMMFull */
    public frmMMFull() {
        initComponents();
        
        btnManual.setEnabled(Main.config.steelyardParam.amanu);
        this.setTitle("Satýnalma Dolu Tartým");
        
        ActionMap am;
        InputMap im;
        KeyStroke ks;        
        
        Action saveActionListener = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
              btnSaveActionPerformed(actionEvent);
            }
          };        
        am = btnSave.getActionMap();
        im = btnSave.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ks = KeyStroke.getKeyStroke(KeyEvent.VK_F11, 0);
        im.put(ks, "save");
        am.put("save", saveActionListener); 
        
        Action weighActionListener = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
              btnWeighActionPerformed(actionEvent);
            }
          };        
        am = btnWeigh.getActionMap();
        im = btnWeigh.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ks = KeyStroke.getKeyStroke(KeyEvent.VK_F7, 0);
        im.put(ks, "weigh");
        am.put("weigh", weighActionListener);        
        
        Action closeActionListener = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
              btnCloseActionPerformed(actionEvent);
            }
          };        
        am = btnClose.getActionMap();
        im = btnClose.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ks = KeyStroke.getKeyStroke(KeyEvent.VK_F12, 0);
        im.put(ks, "close");
        am.put("close", closeActionListener);           
        
        connectToSql();
        
        disableMaterialAction = true;
        cmbMaterial.addItem("-- Lütfen bir malzeme seçin --");
        /*
        if (Main.mmVendors == null) Main.mmVendors = Vendor.getAll(false);
        vendors = Main.mmVendors;
        for (int n = 0; n < vendors.size(); n++)
        {
            Vendor v = (Vendor) vendors.get(n);
            cmbMaterial.addItem(v.getDisplayText());
        }
         */
        if (Main.mmPurchaseables == null) Main.mmPurchaseables = Material.getPurchaseables();
        materials = Main.mmPurchaseables;
        for (int n = 0; n < materials.size(); n++)
        {
            Material m = (Material) materials.get(n);
            cmbMaterial.addItem(m.getDisplayText());
        }
        disableMaterialAction = false;
        
        purchProcess = new PurchProcess();
        setStatus("Lütfen bir satýcý seçin");
        
        txtWeightFull.setEditable(Main.config.intParam.manualWeight);
        txtVrkmeFull.setEditable(Main.config.intParam.manualWeight);        
        
    }
    
    private boolean connectToSql()
    {
        try
        {
            Main.sql.connect();
            return true;
        }
        catch(Exception ex)
        {
            Main.appendLog("SQL baðlantý hatasý: " + ex.toString());
            setStatus("SQL baðlantý hatasý");
            return false;
        }        
    }       
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPlate = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbMaterial = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cmbSender = new javax.swing.JComboBox();
        lblStatus = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        txtPlate2 = new javax.swing.JTextField();
        btnManual = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cmbVendor = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtWeightFull = new javax.swing.JTextField();
        txtVrkmeFull = new javax.swing.JTextField();
        btnWeigh = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtNote = new javax.swing.JTextField();
        chkInspect = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel1.setText("Plaka(lar)");

        txtPlate.setFont(new java.awt.Font("Tahoma", 0, 14));
        txtPlate.setEnabled(false);
        txtPlate.setNextFocusableComponent(txtPlate2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setText("Malzeme");

        cmbMaterial.setFont(new java.awt.Font("Tahoma", 0, 14));
        cmbMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMaterialActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel3.setText("Kaynak");

        cmbSender.setFont(new java.awt.Font("Tahoma", 0, 14));
        cmbSender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSenderActionPerformed(evt);
            }
        });

        lblStatus.setText("...");
        lblStatus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/askan/binaries/save_16.gif"))); // NOI18N
        btnSave.setText("F11 - Kaydet");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/askan/binaries/delete_16.gif"))); // NOI18N
        btnClose.setText("F12 - Kapat");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        txtPlate2.setFont(new java.awt.Font("Tahoma", 0, 14));
        txtPlate2.setEnabled(false);

        btnManual.setText("Serbest Giriþ");
        btnManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManualActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel7.setText("Satýcý");

        cmbVendor.setFont(new java.awt.Font("Tahoma", 0, 14));
        cmbVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbVendorActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel8.setText("Adres");

        txtAddress.setEditable(false);
        txtAddress.setFont(new java.awt.Font("Tahoma", 0, 14));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel9.setText("Aðýrlýk");

        txtWeightFull.setEditable(false);
        txtWeightFull.setFont(new java.awt.Font("Tahoma", 0, 14));

        txtVrkmeFull.setEditable(false);
        txtVrkmeFull.setFont(new java.awt.Font("Tahoma", 0, 14));

        btnWeigh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/askan/binaries/applications_16.gif"))); // NOI18N
        btnWeigh.setText("F7 - Tart");
        btnWeigh.setEnabled(false);
        btnWeigh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWeighActionPerformed(evt);
                btnWeighjButton1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel10.setText("Notlar");

        txtNote.setFont(new java.awt.Font("Tahoma", 0, 14));
        txtNote.setEnabled(false);

        chkInspect.setText("Ýncelensin");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbSender, javax.swing.GroupLayout.Alignment.TRAILING, 0, 353, Short.MAX_VALUE)
                                    .addComponent(cmbMaterial, 0, 353, Short.MAX_VALUE)
                                    .addComponent(cmbVendor, 0, 353, Short.MAX_VALUE)
                                    .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtWeightFull)
                                            .addComponent(txtPlate, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtVrkmeFull, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPlate2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addComponent(chkInspect)
                                .addGap(21, 21, 21)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnWeigh, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(btnManual, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(lblStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(cmbMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addGap(8, 8, 8))
                            .addComponent(cmbVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cmbSender, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPlate2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btnManual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtWeightFull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVrkmeFull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(chkInspect))))
                    .addComponent(btnWeigh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSave)
                    .addComponent(btnClose))
                .addGap(22, 22, 22)
                .addComponent(lblStatus))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        saveEnable(false);
        
        if (!itemSaved) {            
            purchProcess.setPlate(txtPlate.getText());
            if (purchProcess.getPlate().equals(""))
            {
                setStatus("Lütfen plakayý girin");
                return;
            }
            
            // Bu plaka zaten içeride olmasýn?
            try
            {
                if (Vehicle.isVehicleInPlant(txtPlate.getName()))
                {
                    if (askan.systems.Util.confirmStep(this, "Bu araç tesise girmiþ gözüküyor! \nEðer devam ederseniz, eski giriþ kaydý iptal edilecektir.")) 
                    {
                        try
                        {
                            PurchProcess.cancelActivePurchProcesses(txtPlate.getText());
                        }
                        catch(Exception ex)
                        {
                            setStatus("Ýptal sýrasýnda bir hata oluþtu");
                            Main.appendLog(txtPlate.getText() + " plakasýna ait eski kayýtlar iptal edilirken bir hata oluþtu: " + ex.toString());
                            saveEnable(true);
                            return;
                        }
                    }
                    else
                    {
                        saveEnable(true);
                        return;
                    }
                }
            }
            catch(Exception ex)
            {
                Main.appendLog("Mükerrer plaka giriþi kontrolünde bir hata oluþtu: " + ex.toString());
            }
            
            // Devam
            purchProcess.setPlate2(txtPlate2.getText());
            purchProcess.inspect = chkInspect.isSelected();
            purchProcess.passedFull = true;
            purchProcess.fullNote = txtNote.getText();
            
            if (manualMode)
            {
                purchProcess.vendor = null;
                purchProcess.lifnrManual = cmbMaterial.getSelectedItem().toString();
                
                purchProcess.sender = null;
                purchProcess.senderManual = cmbVendor.getSelectedItem().toString();
                
                purchProcess.material = null;
                purchProcess.matnrManual = cmbSender.getSelectedItem().toString();
            }            
            
            // Mükerrer plaka kontrolü
            try
            {
                if (Vehicle.isVehicleInPlant(purchProcess.getPlate()))
                {
                    if (askan.systems.Util.confirmStep(this, "Bu araç tesise girmiþ gözüküyor! \nEðer devam ederseniz, eski giriþ kaydý iptal edilecektir.")) 
                    {
                        try
                        {
                            PurchProcess.cancelActivePurchProcesses(purchProcess.getPlate());
                        }
                        catch(Exception ex)
                        {
                            setStatus("Ýptal sýrasýnda bir hata oluþtu");
                            Main.appendLog(purchProcess.getPlate() + " plakasýna ait eski kayýtlar iptal edilirken bir hata oluþtu: " + ex.toString());
                            saveEnable(true);
                            return;
                        }
                    }
                    else
                    {
                        saveEnable(true);
                        return;
                    }
                }
            }
            catch(Exception ex)
            {
                Main.appendLog("Mükerrer plaka giriþi kontrolünde bir hata oluþtu: " + ex.toString());
            }            
            
            // Kayýt
            try
            {
                purchProcess.insert(Main.sql);
                setStatus("Dolu aðýrlýk kaydedildi, kamyon içeri girebilir");
                itemSaved = true;
                chkInspect.setEnabled(false);
            }
            catch(Exception ex)
            {
                setStatus("Dolu aðýrlýk kaydedilirken bir hata oluþtu");
                Main.appendLog(purchProcess.getPlate() + " aracýna ait dolu aðýrlýk kaydedilirken bir hata oluþtu: " + ex.toString());
                btnSave.setEnabled(true);
                return;                
            }
        }
        
        /*this.setStatus("Ýrsaliye yazdýrýlýyor, lütfen bekleyin");
        purchProcess.printFull();
        setStatus("Ýrsaliye yazdýrýldý, kamyon geçebilir");
        btnSave.setEnabled(true);*/
    }//GEN-LAST:event_btnSaveActionPerformed

    private void saveEnable(boolean Enabled)
    {
        btnSave.setEnabled(itemSaved ? false : Enabled);
        btnWeigh.setEnabled(Enabled);
        btnManual.setEnabled(Enabled);
        
        cmbMaterial.setEnabled(Enabled);
        cmbVendor.setEnabled(Enabled);
        cmbSender.setEnabled(Enabled);
        txtPlate.setEditable(Enabled);
        txtPlate2.setEditable(Enabled);
        txtNote.setEditable(Enabled);
        txtWeightFull.setEditable(Enabled);
        txtVrkmeFull.setEditable(Enabled);
    }
    
    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnWeighActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWeighActionPerformed
        btnWeigh.setEnabled(false);
        
        TwoWaySerialComm.truckStatus = TwoWaySerialComm.TRUCK_STATUS.FULL;
        
        if (Main.config.intParam.manualWeight)
        {
            try
            {
                purchProcess.fullWeight = new Weight();
                purchProcess.fullWeight.setWeight(txtWeightFull.getText(), txtVrkmeFull.getText());            
            }
            catch(Exception ex)
            {
                Main.appendLog("Aðýrlýk hatasý: " + ex.toString());
                setStatus("Lütfen aðýrlýklarý kontrol edin");
                return;
            }
        }
        else
        {
            purchProcess.fullWeight = Main.steelYard.getLastWeight();
        }
        
        if (purchProcess.fullWeight.getWeight() == 0) {
            setStatus("Tartým hatasý");
            btnWeigh.setEnabled(true);
            return;
        } else {
            truckWeighted();
        }
    }//GEN-LAST:event_btnWeighActionPerformed

    private void truckWeighted()
    {
        txtWeightFull.setText(purchProcess.fullWeight.toString(false));
        txtVrkmeFull.setText(purchProcess.fullWeight.getUOM());
        setStatus("Dolu aðýrlýk tespit edildi, kaydedebilirsiniz. Gerekiyorsa tekrar tartabilirsiniz.");
        btnWeigh.setEnabled(true);
        btnSave.setEnabled(true);
    }    
    
    private void btnWeighjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWeighjButton1ActionPerformed
        
    }//GEN-LAST:event_btnWeighjButton1ActionPerformed

    private void cmbMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMaterialActionPerformed
        if (disableMaterialAction) return;
        if (cmbMaterial.getSelectedIndex() == 0) return;
        
        enablePreWeighFields(false);
        disableMaterialAction = true;
        disableVendorAction = true;
        
        cmbVendor.removeAllItems();
        txtAddress.setText("");
        cmbSender.removeAllItems();
        txtPlate.setText("");
        txtPlate2.setText("");
        drivers = null;
        
        purchProcess.material = (Material) materials.get(cmbMaterial.getSelectedIndex() - 1);
        vendors = Vendor.getAllOfMaterial(purchProcess.material.matnr);
        cmbVendor.removeAllItems();
        cmbVendor.addItem("-- Lütfen satýcý seçin --");
        for (int n = 0; n < vendors.size(); n++)
        {
            Vendor v = (Vendor) vendors.get(n);
            cmbVendor.addItem(v.getDisplayText());
        }
        
        if (vendors.size() == 1)
        {
            cmbVendor.setSelectedIndex(1);
            vendorSelected();
        }
        else
        {
            setStatus("Lütfen satýcý seçin");
        }
        
        disableVendorAction = false;
        disableMaterialAction = false;        
}//GEN-LAST:event_cmbMaterialActionPerformed

    private void cmbVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbVendorActionPerformed
        if (disableSenderAction) return;
        if (cmbVendor.getSelectedIndex() <= 0) return;
        
        vendorSelected();
}//GEN-LAST:event_cmbVendorActionPerformed

    private void vendorSelected()
    {
        disableVendorAction = true;
        disableSenderAction = true;
        
        purchProcess.vendor = (Vendor) vendors.get(cmbVendor.getSelectedIndex() - 1);
        cmbSender.removeAllItems();
        cmbSender.addItem("-- Lütfen adres seçin --");
        for (int n = 0; n < purchProcess.vendor.senders.size(); n++)
        {
            Vendor s = (Vendor) purchProcess.vendor.senders.get(n);
            cmbSender.addItem(s.getDisplayText());
        }
        
        if (purchProcess.vendor.senders.size() == 0)
        {
            setStatus("Bu satýcýya ait adres bulunamadý");
        }
        else if (purchProcess.vendor.senders.size() == 1)
        {
            cmbSender.setSelectedIndex(1);
            senderSelected();
        }
        else
        {
            setStatus("Lütfen malýn nereden geldiðini seçin");
        }        
        
        disableVendorAction = false;
        disableSenderAction = false;
    }
    
    private void cmbSenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSenderActionPerformed
        if (disableSenderAction) return;
        if (cmbSender.getSelectedIndex() <= 0) return;
        
        senderSelected();
}//GEN-LAST:event_cmbSenderActionPerformed

    private void btnManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManualActionPerformed
        manualMode = true;
        purchProcess.manualEntries = true;
        
        disableMaterialAction = true;
        disableSenderAction = true;
        disableVendorAction = true;        

        setManualCombobox(cmbMaterial);
        setManualCombobox(cmbVendor);
        setManualCombobox(cmbSender);
        
        txtAddress.setText("");
        txtPlate.setEditable(true);
        txtPlate.setEnabled(true);
        txtPlate2.setEditable(true);
        txtPlate2.setEnabled(true);
        txtNote.setEditable(true);
        txtNote.setEditable(true);       
        
        btnManual.setEnabled(false);
        btnWeigh.setEnabled(true);
        
        setStatus("Lütfen bilgileri girin, aracý tartýn ve kaydedin");
    }//GEN-LAST:event_btnManualActionPerformed
    
    private void queryPlate()
    {
        enablePreWeighFields(false);
        setStatus("Lütfen gerekli alanlarý doldurup, aracý tartýn");        
        enablePreWeighFields(true);
    }
    
    private void setManualCombobox(javax.swing.JComboBox C)
    {
        String temp = "";
        
        try
        {
            temp = C.getSelectedItem().toString();
        }
        catch(Exception ex)
        {
            temp = "";
        }
        
        C.removeAllItems();
        C.setEnabled(true);
        C.setEditable(true);
        C.addItem(temp);        
    }    
    
    private void senderSelected()
    {
        disableSenderAction = true;
        enablePreWeighFields(false);
        purchProcess.sender = (Vendor) purchProcess.vendor.senders.get(cmbSender.getSelectedIndex() - 1);
        txtAddress.setText(purchProcess.sender.address);
        
        txtPlate.setEnabled(true);
        txtPlate2.setEnabled(true);
        txtNote.setEnabled(true);
        btnWeigh.setEnabled(true);
        
        setStatus("Lütfen gerekli alanlarý doldurup, aracý tartýn");
                 
        
        disableSenderAction = false;
    }
    
    private void enablePreWeighFields(boolean Enabled)
    {
        txtPlate.setEnabled(Enabled);
        txtPlate2.setEnabled(Enabled);
        txtNote.setEnabled(Enabled);
        btnWeigh.setEnabled(Enabled);    
    }
    
    public void setStatus(String Status)
    {
        lblStatus.setText(Status);
    }       
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new frmMMFull().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnManual;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnWeigh;
    private javax.swing.JCheckBox chkInspect;
    private javax.swing.JComboBox cmbMaterial;
    private javax.swing.JComboBox cmbSender;
    private javax.swing.JComboBox cmbVendor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtNote;
    private javax.swing.JTextField txtPlate;
    private javax.swing.JTextField txtPlate2;
    private javax.swing.JTextField txtVrkmeFull;
    private javax.swing.JTextField txtWeightFull;
    // End of variables declaration//GEN-END:variables
    
}
